{"paragraphs":[{"text":"%pyspark\n\nfrom jupytershim import JupyterShim, jupyterReset\n","user":"anonymous","dateUpdated":"2017-02-26T22:14:15+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685947_611083456","id":"20170222-110000_685570517","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:15+0100","dateFinished":"2017-02-26T22:14:15+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9801"},{"text":"%pyspark\n\njupyterReset(z.z)\nj = JupyterShim(zeppelinContext=z.z, debug=False)\n","user":"anonymous","dateUpdated":"2017-02-26T22:14:16+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685948_609159711","id":"20170218-215455_1576137953","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:16+0100","dateFinished":"2017-02-26T22:14:16+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9802"},{"text":"%pyspark\nj.start()\n","user":"anonymous","dateUpdated":"2017-02-26T22:14:23+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488143642494_955119523","id":"20170226-221402_1533614086","dateCreated":"2017-02-26T22:14:02+0100","dateStarted":"2017-02-26T22:14:23+0100","dateFinished":"2017-02-26T22:14:23+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9803"},{"text":"%pyspark\nfrom bokeh.io import push_notebook, show, output_notebook\nfrom bokeh.layouts import row\nfrom bokeh.resources import Resources\nfrom bokeh.plotting import figure\n\noutput_notebook()\n","user":"anonymous","dateUpdated":"2017-02-26T22:14:26+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685948_609159711","id":"20170218-224440_1753132708","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:26+0100","dateFinished":"2017-02-26T22:14:26+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9804"},{"text":"%pyspark\nfrom bokeh.charts import Bar, output_file, show\nfrom bokeh.charts.attributes import cat, color\nfrom bokeh.charts.operations import blend\nfrom bokeh.charts.utils import df_from_json\nfrom bokeh.sampledata.olympics2014 import data\n\n# utilize utility to make it easy to get json/dict data converted to a dataframe\ndf = df_from_json(data)\n\n# filter by countries with at least one medal and sort by total medals\ndf = df[df['total'] > 0]\ndf = df.sort(\"total\", ascending=False)\n\nbar = Bar(df,\n          values=blend('bronze', 'silver', 'gold', name='medals', labels_name='medal'),\n          label=cat(columns='abbr', sort=False),\n          stack=cat(columns='medal', sort=False),\n          color=color(columns='medal', palette=['SaddleBrown', 'Silver', 'Goldenrod'],\n                      sort=False),\n          legend='top_right',\n          title=\"Medals per Country, Sorted by Total Medals\",\n          tooltips=[('medal', '@medal'), ('country', '@abbr')])\n\n\nshow(bar)\n","user":"anonymous","dateUpdated":"2017-02-26T22:14:29+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685949_608774962","id":"20170221-202002_1864027574","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:29+0100","dateFinished":"2017-02-26T22:14:30+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9805"},{"text":"%pyspark\nfrom __future__ import print_function\n\nfrom bokeh.document import Document\nfrom bokeh.embed import file_html\nfrom bokeh.layouts import gridplot\nfrom bokeh.models.glyphs import Circle\nfrom bokeh.models import (BasicTicker, ColumnDataSource, Grid, LinearAxis,\n                         DataRange1d, PanTool, Plot, WheelZoomTool)\nfrom bokeh.resources import INLINE\nfrom bokeh.sampledata.iris import flowers\nfrom bokeh.util.browser import view\n\ncolormap = {'setosa': 'red', 'versicolor': 'green', 'virginica': 'blue'}\n\nflowers['color'] = flowers['species'].map(lambda x: colormap[x])\n\n\nsource = ColumnDataSource(\n    data=dict(\n        petal_length=flowers['petal_length'],\n        petal_width=flowers['petal_width'],\n        sepal_length=flowers['sepal_length'],\n        sepal_width=flowers['sepal_width'],\n        color=flowers['color']\n    )\n)\n\nxdr = DataRange1d(bounds=None)\nydr = DataRange1d(bounds=None)\n\ndef make_plot(xname, yname, xax=False, yax=False):\n    mbl = 40 if yax else 0\n    mbb = 40 if xax else 0\n    plot = Plot(\n        x_range=xdr, y_range=ydr, background_fill_color=\"#efe8e2\",\n        border_fill_color='white', plot_width=200 + mbl, plot_height=200 + mbb,\n        min_border_left=2+mbl, min_border_right=2, min_border_top=2, min_border_bottom=2+mbb)\n\n    circle = Circle(x=xname, y=yname, fill_color=\"color\", fill_alpha=0.2, size=4, line_color=\"color\")\n    r = plot.add_glyph(source, circle)\n\n    xdr.renderers.append(r)\n    ydr.renderers.append(r)\n\n    xticker = BasicTicker()\n    if xax:\n        xaxis = LinearAxis()\n        plot.add_layout(xaxis, 'below')\n        xticker = xaxis.ticker\n    plot.add_layout(Grid(dimension=0, ticker=xticker))\n\n    yticker = BasicTicker()\n    if yax:\n        yaxis = LinearAxis()\n        plot.add_layout(yaxis, 'left')\n        yticker = yaxis.ticker\n    plot.add_layout(Grid(dimension=1, ticker=yticker))\n\n    plot.add_tools(PanTool(), WheelZoomTool())\n\n    return plot\n\nxattrs = [\"petal_length\", \"petal_width\", \"sepal_width\", \"sepal_length\"]\nyattrs = list(reversed(xattrs))\nplots = []\n\nfor y in yattrs:\n    row = []\n    for x in xattrs:\n        xax = (y == yattrs[-1])\n        yax = (x == xattrs[0])\n        plot = make_plot(x, y, xax, yax)\n        row.append(plot)\n    plots.append(row)\n\ngrid = gridplot(plots)\n\nshow(grid)","user":"anonymous","dateUpdated":"2017-02-26T22:14:33+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685949_608774962","id":"20170221-201808_1127949177","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:33+0100","dateFinished":"2017-02-26T22:14:33+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9806"},{"text":"%pyspark\nimport numpy as np\nfrom scipy.integrate import odeint\n\nfrom bokeh.plotting import figure, show\n\nZBAK = z # Zeppelin bug\n\nsigma = 10\nrho = 28\nbeta = 8.0/3\ntheta = 3 * np.pi / 4\n\ndef lorenz(xyz, t):\n    x, y, z = xyz\n    x_dot = sigma * (y - x)\n    y_dot = x * rho - x * z - y\n    z_dot = x * y - beta* z\n    return [x_dot, y_dot, z_dot]\n\ninitial = (-10, -7, 35)\nt = np.arange(0, 100, 0.006)\n\nsolution = odeint(lorenz, initial, t)\n\nx = solution[:, 0]\ny = solution[:, 1]\nz = solution[:, 2]\nxprime = np.cos(theta) * x - np.sin(theta) * y\n\ncolors = [\"#C6DBEF\", \"#9ECAE1\", \"#6BAED6\", \"#4292C6\", \"#2171B5\", \"#08519C\", \"#08306B\",]\n\np = figure(title=\"lorenz example\")\n\np.multi_line(np.array_split(xprime, 7), np.array_split(z, 7),\n             line_color=colors, line_alpha=0.8, line_width=1.5)\n\n\nshow(p)  # open a browser\n\nz = ZBAK # Zeppelin bug\n","user":"anonymous","dateUpdated":"2017-02-26T22:14:39+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685950_609929209","id":"20170221-200421_395267022","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:39+0100","dateFinished":"2017-02-26T22:14:42+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9807"},{"text":"%pyspark\nfrom bokeh.models import HoverTool, ColumnDataSource\nfrom bokeh.plotting import figure, show\nfrom bokeh.sampledata.periodic_table import elements\n\nromans = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\n\nelements = elements.copy()\nelements[\"atomic mass\"] = elements[\"atomic mass\"].astype(str)\n\nelements[\"period\"] = [romans[x-1] for x in elements.period]\nelements = elements[elements.group != \"-\"]\n\ngroup_range = [str(x) for x in range(1, 19)]\n\ncolormap = {\n    \"alkali metal\"         : \"#a6cee3\",\n    \"alkaline earth metal\" : \"#1f78b4\",\n    \"halogen\"              : \"#fdbf6f\",\n    \"metal\"                : \"#b2df8a\",\n    \"metalloid\"            : \"#33a02c\",\n    \"noble gas\"            : \"#bbbb88\",\n    \"nonmetal\"             : \"#baa2a6\",\n    \"transition metal\"     : \"#e08e79\",\n}\n\nsource = ColumnDataSource(\n    data=dict(\n        group=[str(x) for x in elements[\"group\"]],\n        period=[str(y) for y in elements[\"period\"]],\n        symx=[str(x)+\":0.1\" for x in elements[\"group\"]],\n        numbery=[str(x)+\":0.8\" for x in elements[\"period\"]],\n        massy=[str(x)+\":0.15\" for x in elements[\"period\"]],\n        namey=[str(x)+\":0.3\" for x in elements[\"period\"]],\n        sym=elements[\"symbol\"],\n        name=elements[\"name\"],\n        cpk=elements[\"CPK\"],\n        atomic_number=elements[\"atomic number\"],\n        electronic=elements[\"electronic configuration\"],\n        mass=elements[\"atomic mass\"],\n        type=elements[\"metal\"],\n        type_color=[colormap[x] for x in elements[\"metal\"]],\n    )\n)\n\np = figure(title=\"Periodic Table\", tools=\"hover,save\",\n           x_range=group_range, y_range=list(reversed(romans)))\np.plot_width = 1200\np.toolbar_location = None\np.outline_line_color = None\n\np.rect(\"group\", \"period\", 0.9, 0.9, source=source,\n       fill_alpha=0.6, color=\"type_color\")\n\ntext_props = {\n    \"source\": source,\n    \"angle\": 0,\n    \"color\": \"black\",\n    \"text_align\": \"left\",\n    \"text_baseline\": \"middle\"\n}\n\np.text(x=\"symx\", y=\"period\", text=\"sym\",\n       text_font_style=\"bold\", text_font_size=\"15pt\", **text_props)\n\np.text(x=\"symx\", y=\"numbery\", text=\"atomic_number\",\n       text_font_size=\"9pt\", **text_props)\n\np.text(x=\"symx\", y=\"namey\", text=\"name\",\n       text_font_size=\"6pt\", **text_props)\n\np.text(x=\"symx\", y=\"massy\", text=\"mass\",\n       text_font_size=\"5pt\", **text_props)\n\np.grid.grid_line_color = None\n\np.select_one(HoverTool).tooltips = [\n    (\"name\", \"@name\"),\n    (\"atomic number\", \"@atomic_number\"),\n    (\"type\", \"@type\"),\n    (\"atomic mass\", \"@mass\"),\n    (\"CPK color\", \"$color[hex, swatch]:cpk\"),\n    (\"electronic configuration\", \"@electronic\"),\n]\n\nshow(p)  # Change to save(p) to save but not show the HTML file","user":"anonymous","dateUpdated":"2017-02-26T22:14:45+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685950_609929209","id":"20170221-201347_1016301668","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:45+0100","dateFinished":"2017-02-26T22:14:45+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9808"},{"text":"%pyspark\nfrom collections import OrderedDict\nfrom math import log, sqrt\n\nimport numpy as np\nimport pandas as pd\nfrom six.moves import cStringIO as StringIO\n\nfrom bokeh.plotting import figure, show, output_file\n\nantibiotics = \"\"\"\nbacteria,                        penicillin, streptomycin, neomycin, gram\nMycobacterium tuberculosis,      800,        5,            2,        negative\nSalmonella schottmuelleri,       10,         0.8,          0.09,     negative\nProteus vulgaris,                3,          0.1,          0.1,      negative\nKlebsiella pneumoniae,           850,        1.2,          1,        negative\nBrucella abortus,                1,          2,            0.02,     negative\nPseudomonas aeruginosa,          850,        2,            0.4,      negative\nEscherichia coli,                100,        0.4,          0.1,      negative\nSalmonella (Eberthella) typhosa, 1,          0.4,          0.008,    negative\nAerobacter aerogenes,            870,        1,            1.6,      negative\nBrucella antracis,               0.001,      0.01,         0.007,    positive\nStreptococcus fecalis,           1,          1,            0.1,      positive\nStaphylococcus aureus,           0.03,       0.03,         0.001,    positive\nStaphylococcus albus,            0.007,      0.1,          0.001,    positive\nStreptococcus hemolyticus,       0.001,      14,           10,       positive\nStreptococcus viridans,          0.005,      10,           40,       positive\nDiplococcus pneumoniae,          0.005,      11,           10,       positive\n\"\"\"\n\ndrug_color = OrderedDict([\n    (\"Penicillin\",   \"#0d3362\"),\n    (\"Streptomycin\", \"#c64737\"),\n    (\"Neomycin\",     \"black\"  ),\n])\n\ngram_color = {\n    \"positive\" : \"#aeaeb8\",\n    \"negative\" : \"#e69584\",\n}\n\ndf = pd.read_csv(StringIO(antibiotics),\n                 skiprows=1,\n                 skipinitialspace=True,\n                 engine='python')\n\nwidth = 800\nheight = 800\ninner_radius = 90\nouter_radius = 300 - 10\n\nminr = sqrt(log(.001 * 1E4))\nmaxr = sqrt(log(1000 * 1E4))\na = (outer_radius - inner_radius) / (minr - maxr)\nb = inner_radius - a * maxr\n\ndef rad(mic):\n    return a * np.sqrt(np.log(mic * 1E4)) + b\n\nbig_angle = 2.0 * np.pi / (len(df) + 1)\nsmall_angle = big_angle / 7\n\np = figure(plot_width=width, plot_height=height, title=\"\",\n    x_axis_type=None, y_axis_type=None,\n    x_range=(-420, 420), y_range=(-420, 420),\n    min_border=0, outline_line_color=\"black\",\n    background_fill_color=\"#f0e1d2\", border_fill_color=\"#f0e1d2\",\n    toolbar_sticky=False)\n\np.xgrid.grid_line_color = None\np.ygrid.grid_line_color = None\n\n# annular wedges\nangles = np.pi/2 - big_angle/2 - df.index.to_series()*big_angle\ncolors = [gram_color[gram] for gram in df.gram]\np.annular_wedge(\n    0, 0, inner_radius, outer_radius, -big_angle+angles, angles, color=colors,\n)\n\n# small wedges\np.annular_wedge(0, 0, inner_radius, rad(df.penicillin),\n                -big_angle+angles+5*small_angle, -big_angle+angles+6*small_angle,\n                color=drug_color['Penicillin'])\np.annular_wedge(0, 0, inner_radius, rad(df.streptomycin),\n                -big_angle+angles+3*small_angle, -big_angle+angles+4*small_angle,\n                color=drug_color['Streptomycin'])\np.annular_wedge(0, 0, inner_radius, rad(df.neomycin),\n                -big_angle+angles+1*small_angle, -big_angle+angles+2*small_angle,\n                color=drug_color['Neomycin'])\n\n# circular axes and lables\nlabels = np.power(10.0, np.arange(-3, 4))\nradii = a * np.sqrt(np.log(labels * 1E4)) + b\np.circle(0, 0, radius=radii, fill_color=None, line_color=\"white\")\np.text(0, radii[:-1], [str(r) for r in labels[:-1]],\n       text_font_size=\"8pt\", text_align=\"center\", text_baseline=\"middle\")\n\n# radial axes\np.annular_wedge(0, 0, inner_radius-10, outer_radius+10,\n                -big_angle+angles, -big_angle+angles, color=\"black\")\n\n# bacteria labels\nxr = radii[0]*np.cos(np.array(-big_angle/2 + angles))\nyr = radii[0]*np.sin(np.array(-big_angle/2 + angles))\nlabel_angle=np.array(-big_angle/2+angles)\nlabel_angle[label_angle < -np.pi/2] += np.pi # easier to read labels on the left side\np.text(xr, yr, df.bacteria, angle=label_angle,\n       text_font_size=\"9pt\", text_align=\"center\", text_baseline=\"middle\")\n\n# OK, these hand drawn legends are pretty clunky, will be improved in future release\np.circle([-40, -40], [-370, -390], color=list(gram_color.values()), radius=5)\np.text([-30, -30], [-370, -390], text=[\"Gram-\" + gr for gr in gram_color.keys()],\n       text_font_size=\"7pt\", text_align=\"left\", text_baseline=\"middle\")\n\np.rect([-40, -40, -40], [18, 0, -18], width=30, height=13,\n       color=list(drug_color.values()))\np.text([-15, -15, -15], [18, 0, -18], text=list(drug_color),\n       text_font_size=\"9pt\", text_align=\"left\", text_baseline=\"middle\")\n\n\nshow(p)","user":"anonymous","dateUpdated":"2017-02-26T22:14:48+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685950_609929209","id":"20170221-201443_71602227","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-26T22:14:48+0100","dateFinished":"2017-02-26T22:14:48+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9809"},{"text":"%pyspark\nfrom bokeh.io import show\nfrom bokeh.models import (\n    ColumnDataSource,\n    HoverTool,\n    LogColorMapper\n)\nfrom bokeh.palettes import Viridis6 as palette\nfrom bokeh.plotting import figure\n\nfrom bokeh.sampledata.us_counties import data as counties\nfrom bokeh.sampledata.unemployment import data as unemployment\n\npalette.reverse()\n\ncounties = {\n    code: county for code, county in counties.items() if county[\"state\"] == \"tx\"\n}\n\ncounty_xs = [county[\"lons\"] for county in counties.values()]\ncounty_ys = [county[\"lats\"] for county in counties.values()]\n\ncounty_names = [county['name'] for county in counties.values()]\ncounty_rates = [unemployment[county_id] for county_id in counties]\ncolor_mapper = LogColorMapper(palette=palette)\n\nsource = ColumnDataSource(data=dict(\n    x=county_xs,\n    y=county_ys,\n    name=county_names,\n    rate=county_rates,\n))\n\nTOOLS = \"pan,wheel_zoom,box_zoom,reset,hover,save\"\n\np = figure(\n    title=\"Texas Unemployment, 2009\", tools=TOOLS,\n    x_axis_location=None, y_axis_location=None\n)\np.grid.grid_line_color = None\n\np.patches('x', 'y', source=source,\n          fill_color={'field': 'rate', 'transform': color_mapper},\n          fill_alpha=0.7, line_color=\"white\", line_width=0.5)\n\nhover = p.select_one(HoverTool)\nhover.point_policy = \"follow_mouse\"\nhover.tooltips = [\n    (\"Name\", \"@name\"),\n    (\"Unemployment rate)\", \"@rate%\"),\n    (\"(Long, Lat)\", \"($x, $y)\"),\n]\n\nshow(p)","user":"anonymous","dateUpdated":"2017-02-25T11:29:15+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685951_609544460","id":"20170221-201647_822343580","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-25T11:29:15+0100","dateFinished":"2017-02-25T11:29:17+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9810"},{"text":"%pyspark\nimport pandas as pd\nfrom bokeh.charts import output_file, Chord\nfrom bokeh.io import show\nfrom bokeh.sampledata.les_mis import data\n\nnodes = data['nodes']\nlinks = data['links']\n\nnodes_df = pd.DataFrame(nodes)\nlinks_df = pd.DataFrame(links)\n\nsource_data = links_df.merge(nodes_df, how='left', left_on='source', right_index=True)\nsource_data = source_data.merge(nodes_df, how='left', left_on='target', right_index=True)\nsource_data = source_data[source_data[\"value\"] > 5]\n\nchord_from_df = Chord(source_data, source=\"name_x\", target=\"name_y\", value=\"value\")\n\nshow(chord_from_df)","user":"anonymous","dateUpdated":"2017-02-25T11:29:20+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487765685951_609544460","id":"20170221-201723_953579164","dateCreated":"2017-02-22T13:14:45+0100","dateStarted":"2017-02-25T11:29:20+0100","dateFinished":"2017-02-25T11:29:20+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9811"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-02-25T11:29:35+0100","config":{"colWidth":12,"enabled":false,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1487848418748_-936443955","id":"20170223-121338_2133412796","dateCreated":"2017-02-23T12:13:38+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9812"}],"name":"JupyterShim Bokeh Gallery","id":"2CA2PRGXE","angularObjects":{"2C8CW5MV1:shared_process":[{"name":"__jupyter_comm_msg__","object":{"msg":{"html":"\n\n    <div class=\"bk-root\">\n        <div class=\"bk-plotdiv\" id=\"38fc86ba-51d6-41d0-8ad3-0141205022f1\"></div>\n    </div>\n<script type=\"text/javascript\">\n  \n  (function(global) {\n    function now() {\n      return new Date();\n    }\n  \n    var force = false;\n  \n    if (typeof (window._bokeh_onload_callbacks) === \"undefined\" || force === true) {\n      window._bokeh_onload_callbacks = [];\n      window._bokeh_is_loading = undefined;\n    }\n  \n  \n    \n    if (typeof (window._bokeh_timeout) === \"undefined\" || force === true) {\n      window._bokeh_timeout = Date.now() + 0;\n      window._bokeh_failed_load = false;\n    }\n  \n    var NB_LOAD_WARNING = {'data': {'text/html':\n       \"<div style='background-color: #fdd'>\\n\"+\n       \"<p>\\n\"+\n       \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n       \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n       \"</p>\\n\"+\n       \"<ul>\\n\"+\n       \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n       \"<li>use INLINE resources instead, as so:</li>\\n\"+\n       \"</ul>\\n\"+\n       \"<code>\\n\"+\n       \"from bokeh.resources import INLINE\\n\"+\n       \"output_notebook(resources=INLINE)\\n\"+\n       \"</code>\\n\"+\n       \"</div>\"}};\n  \n    function display_loaded() {\n      if (window.Bokeh !== undefined) {\n        document.getElementById(\"38fc86ba-51d6-41d0-8ad3-0141205022f1\").textContent = \"BokehJS successfully loaded.\";\n      } else if (Date.now() < window._bokeh_timeout) {\n        setTimeout(display_loaded, 100)\n      }\n    }\n  \n    function run_callbacks() {\n      window._bokeh_onload_callbacks.forEach(function(callback) { callback() });\n      delete window._bokeh_onload_callbacks\n      console.info(\"Bokeh: all callbacks have finished\");\n    }\n  \n    function load_libs(js_urls, callback) {\n      window._bokeh_onload_callbacks.push(callback);\n      if (window._bokeh_is_loading > 0) {\n        console.log(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n        return null;\n      }\n      if (js_urls == null || js_urls.length === 0) {\n        run_callbacks();\n        return null;\n      }\n      console.log(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      window._bokeh_is_loading = js_urls.length;\n      for (var i = 0; i < js_urls.length; i++) {\n        var url = js_urls[i];\n        var s = document.createElement('script');\n        s.src = url;\n        s.async = false;\n        s.onreadystatechange = s.onload = function() {\n          window._bokeh_is_loading--;\n          if (window._bokeh_is_loading === 0) {\n            console.log(\"Bokeh: all BokehJS libraries loaded\");\n            run_callbacks()\n          }\n        };\n        s.onerror = function() {\n          console.warn(\"failed to load library \" + url);\n        };\n        console.log(\"Bokeh: injecting script tag for BokehJS library: \", url);\n        document.getElementsByTagName(\"head\")[0].appendChild(s);\n      }\n    };var element = document.getElementById(\"38fc86ba-51d6-41d0-8ad3-0141205022f1\");\n    if (element == null) {\n      console.log(\"Bokeh: ERROR: autoload.js configured with elementid '38fc86ba-51d6-41d0-8ad3-0141205022f1' but no matching script tag was found. \")\n      return false;\n    }\n  \n    var js_urls = [];\n  \n    var inline_js = [\n      function(Bokeh) {\n        (function() {\n          var fn = function() {\n            var docs_json = {\"1477b689-6c5b-40cf-90cb-e01828a44004\":{\"roots\":{\"references\":[{\"attributes\":{\"callback\":null,\"column_names\":[\"x\",\"y\",\"fill_color\",\"line_color\"],\"data\":{\"fill_color\":[\"#e69584\",\"#aeaeb8\"],\"line_color\":[\"#e69584\",\"#aeaeb8\"],\"x\":[-40,-40],\"y\":[-370,-390]}},\"id\":\"5b8f6813-5543-493d-bfe5-adc77bcbe901\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"plot\":null,\"text\":\"\"},\"id\":\"3e134d1c-eaed-4164-b4a7-5cfcbabb3384\",\"type\":\"Title\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"y\",\"x\",\"text\"],\"data\":{\"text\":[\"Penicillin\",\"Streptomycin\",\"Neomycin\"],\"x\":[-15,-15,-15],\"y\":[18,0,-18]}},\"id\":\"71c3368b-9475-4070-8ffb-7e7bdf93f3bd\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"outer_radius\":{\"units\":\"data\",\"value\":290},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"5e614112-c86a-43c2-9076-ba0b5e214dc5\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"y\",\"x\",\"text\"],\"data\":{\"text\":[\"Gram-negative\",\"Gram-positive\"],\"x\":[-30,-30],\"y\":[-370,-390]}},\"id\":\"98ab1a3a-e72f-4abe-b2ef-a73939f2d28c\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"callback\":null,\"end\":420,\"start\":-420},\"id\":\"bfe7d61c-89d3-4d35-a9c3-a67e874638e4\",\"type\":\"Range1d\"},{\"attributes\":{\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"units\":\"data\",\"value\":13},\"line_color\":{\"field\":\"line_color\"},\"width\":{\"units\":\"data\",\"value\":30},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"aadc569c-0607-40af-9c98-a30de9289615\",\"type\":\"Rect\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"radius\":{\"units\":\"data\",\"value\":5},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"e75b7230-33fd-4e59-9157-de8f32cdbcad\",\"type\":\"Circle\"},{\"attributes\":{\"data_source\":{\"id\":\"c6d7f6d6-4786-435b-952f-b6780f089940\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"032ea1e0-dcf0-4896-bc6d-84b11ccf5285\",\"type\":\"AnnularWedge\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"74daa600-8ecf-4827-933a-a8a279159cb3\",\"type\":\"AnnularWedge\"},\"selection_glyph\":null},\"id\":\"84eefc6c-18c4-446e-be29-c5a038972229\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_color\":{\"value\":\"#c64737\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_color\":{\"value\":\"#c64737\"},\"outer_radius\":{\"field\":\"outer_radius\",\"units\":\"data\"},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"c221221c-2b0e-44a4-a015-6cac8bc6bf19\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"height\":{\"units\":\"data\",\"value\":13},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"width\":{\"units\":\"data\",\"value\":30},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"8bd253de-6b4f-40e5-8b50-799fbadda946\",\"type\":\"Rect\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"outer_radius\",\"start_angle\",\"end_angle\"],\"data\":{\"end_angle\":{\"__ndarray__\":\"yERVhbPz8T9mg5l5pRPoP3v6ENHHf9g/KMXd3ZUIiz8rHjNzPs/Wv0CVqspgO+e/tM3dLZGH8b/KUGb2cXH3v97T7r5SW/2/eKu7w5miAcAD7f8nipcEwI0uRIx6jAfAF3CI8GqBCsChscxUW3YNwJd5iNylNRDAW5qqDh6wEcA=\",\"dtype\":\"float64\",\"shape\":[16]},\"outer_radius\":{\"__ndarray__\":\"m8z7btjvY0D9PDy5w1RpQDjj0CUzIWlABsmM1zIPZUChS31Y0mVsQB0YCXI1nGZAOOPQJTMhaUCyh+QAGnxuQM3Wg944S2RA/HdeznjObkA449AlMyFpQAAAAAAAIHJAAAAAAAAgckCg0sRXLXlhQFhbROgM+V5AoNLEVy15YUA=\",\"dtype\":\"float64\",\"shape\":[16]},\"start_angle\":{\"__ndarray__\":\"oVZm1m4b8T8Xp7sbHGPmP91BVRW1HtU/p1NmZnBGpL/J1u4uUTDav49xiCjq6+i/27vM3NVf8r/xPlWltkn4vwXC3W2XM/6/jCIzG7wOAsAXZHd/rAMFwKGlu+Oc+AfAK+f/R43tCsC1KESsfeINwCE1RAi3axDA5VVmOi/mEcA=\",\"dtype\":\"float64\",\"shape\":[16]}}},\"id\":\"c6d7f6d6-4786-435b-952f-b6780f089940\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"1ad28558-e945-4441-8b28-503606f632c7\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"e947a2e5-90bb-4dad-b14b-4dd6d9cd9c69\",\"type\":\"Circle\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"f6f80d83-a9ce-4e13-97d5-7cbd559f22c9\",\"type\":\"Circle\"},\"selection_glyph\":null},\"id\":\"ba91a1a2-d209-4831-9f4f-98eac355f0d6\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"outer_radius\",\"start_angle\",\"end_angle\"],\"data\":{\"end_angle\":{\"__ndarray__\":\"Zv0QQcZU9T+i9BDxytXuP3ru/18JAuM/RKG7Ox+5zD9kd4gI55XCvwQkM1M7eeC/LCpE5PxM7L8smKo6XxD0v0AbMwNA+vm/U567yyDk/7+0ECLKAOcCwD5SZi7x2wXAyJOqkuHQCMBS1e720cULwN8WM1vCug7ANKy7X9nXEMA=\",\"dtype\":\"float64\",\"shape\":[16]},\"outer_radius\":{\"__ndarray__\":\"bLZfBPAOV0Cg0sRXLXlhQDLrDr5nTGNA1FIAQwHoVkAGyYzXMg9lQNRSAEMB6FZAFEU4zHF2XEAGyYzXMg9lQHi2fdUW2VZAAAAAAAAgckAGyYzXMg9lQIaiNChEiGtA/HdeznjObkAAAAAAACByQKYExgH2o29ApgTGAfajb0A=\",\"dtype\":\"float64\",\"shape\":[16]},\"start_angle\":{\"__ndarray__\":\"Pw8ikoF89D9UGDOTQSXtPysSIgKAUeE/CDBExPn2xT+g6P9/DFjJv1IAEbHEKeK/egYiQob97b9Thpnpo+j0v2cJIrKE0vq/PUZVvTJeAMDIh5khI1MDwFLJ3YUTSAbA3Aoi6gM9CcBmTGZO9DEMwPONqrLkJg/Avmd3i+oNEcA=\",\"dtype\":\"float64\",\"shape\":[16]}}},\"id\":\"3988c8d6-808c-4297-b43d-39efc801db8b\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"angle\":{\"field\":\"angle\",\"units\":\"rad\"},\"text_align\":\"center\",\"text_alpha\":{\"value\":0.1},\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"9pt\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"97a9c1eb-699f-482d-a11d-b6f55c9275d0\",\"type\":\"Text\"},{\"attributes\":{\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"7pt\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"489b8288-2468-4352-beb3-65900eee1ac0\",\"type\":\"Text\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_color\":{\"field\":\"fill_color\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_color\":{\"field\":\"line_color\"},\"outer_radius\":{\"units\":\"data\",\"value\":290},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"ce86057b-eabb-4df1-9430-4fd15b2d3ce1\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"outer_radius\":{\"field\":\"outer_radius\",\"units\":\"data\"},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"74daa600-8ecf-4827-933a-a8a279159cb3\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"radius\":{\"field\":\"radius\",\"units\":\"data\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"f6f80d83-a9ce-4e13-97d5-7cbd559f22c9\",\"type\":\"Circle\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"outer_radius\":{\"field\":\"outer_radius\",\"units\":\"data\"},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"52220ca1-a78f-4985-a01e-a600a78bba7d\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"data_source\":{\"id\":\"98ab1a3a-e72f-4abe-b2ef-a73939f2d28c\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"489b8288-2468-4352-beb3-65900eee1ac0\",\"type\":\"Text\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"893a0db8-b1f9-4503-a887-9c1323672722\",\"type\":\"Text\"},\"selection_glyph\":null},\"id\":\"f850c69b-a495-40ac-975b-6dd3b815d89e\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"background_fill_color\":{\"value\":\"#f0e1d2\"},\"border_fill_color\":{\"value\":\"#f0e1d2\"},\"min_border\":0,\"outline_line_color\":{\"value\":\"black\"},\"plot_height\":800,\"plot_width\":800,\"renderers\":[{\"id\":\"8cff9a13-f38a-40be-8f57-f4d4324aea5e\",\"type\":\"BoxAnnotation\"},{\"id\":\"9c5cfa5a-c736-44ce-9cf3-9b536839a698\",\"type\":\"GlyphRenderer\"},{\"id\":\"c427ee57-4abe-46ed-a61a-a13bd516e60b\",\"type\":\"GlyphRenderer\"},{\"id\":\"c0635dc8-ea33-4c13-b29e-7815d4b757f7\",\"type\":\"GlyphRenderer\"},{\"id\":\"84eefc6c-18c4-446e-be29-c5a038972229\",\"type\":\"GlyphRenderer\"},{\"id\":\"ba91a1a2-d209-4831-9f4f-98eac355f0d6\",\"type\":\"GlyphRenderer\"},{\"id\":\"a3fe6ab3-ba84-4b78-ac62-8e3d9039daaf\",\"type\":\"GlyphRenderer\"},{\"id\":\"2b934658-1887-43f5-bfc7-01cfb8233b61\",\"type\":\"GlyphRenderer\"},{\"id\":\"35eacd00-58f2-44d2-a38a-ca7b550bbcb7\",\"type\":\"GlyphRenderer\"},{\"id\":\"5d2206f4-f0d3-4575-a8ab-433ee5a098a6\",\"type\":\"GlyphRenderer\"},{\"id\":\"f850c69b-a495-40ac-975b-6dd3b815d89e\",\"type\":\"GlyphRenderer\"},{\"id\":\"15452271-b636-471a-9c5e-53c29a02948b\",\"type\":\"GlyphRenderer\"},{\"id\":\"c9cc1e03-2fab-4f37-afa5-b6888dc76802\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"3e134d1c-eaed-4164-b4a7-5cfcbabb3384\",\"type\":\"Title\"},\"tool_events\":{\"id\":\"68e6bb2e-8ea7-4ded-bf77-c5088581b7b7\",\"type\":\"ToolEvents\"},\"toolbar\":{\"id\":\"3955a4b9-44e2-4535-b6ec-74149dcc849d\",\"type\":\"Toolbar\"},\"toolbar_sticky\":false,\"x_range\":{\"id\":\"bfe7d61c-89d3-4d35-a9c3-a67e874638e4\",\"type\":\"Range1d\"},\"y_range\":{\"id\":\"fa63218f-9e7a-44fd-a94a-4807ef8e90de\",\"type\":\"Range1d\"}},\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"132bdac0-3dcb-47dc-80fc-07892b56f02c\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"4d8c9fb9-e289-4e19-aaeb-f01068ab052e\",\"type\":\"AnnularWedge\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"dec61edc-dc86-4cd5-abdf-50e256a72a0e\",\"type\":\"AnnularWedge\"},\"selection_glyph\":null},\"id\":\"2b934658-1887-43f5-bfc7-01cfb8233b61\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text_alpha\":{\"value\":0.1},\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"7pt\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"893a0db8-b1f9-4503-a887-9c1323672722\",\"type\":\"Text\"},{\"attributes\":{\"plot\":{\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"6dc39141-550d-4d2d-8ed7-e3bc0f19ed0d\",\"type\":\"ResetTool\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"start_angle\",\"end_angle\"],\"data\":{\"end_angle\":{\"__ndarray__\":\"eWh3JypD8D/Iyt29krLkPz+JmVmivdE/TAwiIoOnt79nj6rqY5Hdv95NZoZznOq/A6q7ixo4878ZLURU+yH5vy2wzBzcC/+/oJmqct56AsAr2+7Wzm8FwLUcMzu/ZAjAP153n69ZC8DJn7sDoE4OwKvw/zPIoRDAbxEiZkAcEsA=\",\"dtype\":\"float64\",\"shape\":[16]},\"start_angle\":{\"__ndarray__\":\"eWh3JypD8D/Iyt29krLkPz+JmVmivdE/TAwiIoOnt79nj6rqY5Hdv95NZoZznOq/A6q7ixo4878ZLURU+yH5vy2wzBzcC/+/oJmqct56AsAr2+7Wzm8FwLUcMzu/ZAjAP153n69ZC8DJn7sDoE4OwKvw/zPIoRDAbxEiZkAcEsA=\",\"dtype\":\"float64\",\"shape\":[16]}}},\"id\":\"132bdac0-3dcb-47dc-80fc-07892b56f02c\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"68e6bb2e-8ea7-4ded-bf77-c5088581b7b7\",\"type\":\"ToolEvents\"},{\"attributes\":{\"data_source\":{\"id\":\"1c5e9bae-f5da-4bbf-bc74-6f7f3a20d97a\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"c63a7b57-f0f6-46cc-a061-ef3ec098818d\",\"type\":\"Text\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"97a9c1eb-699f-482d-a11d-b6f55c9275d0\",\"type\":\"Text\"},\"selection_glyph\":null},\"id\":\"35eacd00-58f2-44d2-a38a-ca7b550bbcb7\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"7118fe63-0f4a-4115-b4e1-9575c6698f51\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"aadc569c-0607-40af-9c98-a30de9289615\",\"type\":\"Rect\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"8bd253de-6b4f-40e5-8b50-799fbadda946\",\"type\":\"Rect\"},\"selection_glyph\":null},\"id\":\"15452271-b636-471a-9c5e-53c29a02948b\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"angle\":{\"field\":\"angle\",\"units\":\"rad\"},\"text_align\":\"center\",\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"9pt\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"c63a7b57-f0f6-46cc-a061-ef3ec098818d\",\"type\":\"Text\"},{\"attributes\":{\"fill_color\":{\"value\":null},\"line_color\":{\"value\":\"white\"},\"radius\":{\"field\":\"radius\",\"units\":\"data\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"e947a2e5-90bb-4dad-b14b-4dd6d9cd9c69\",\"type\":\"Circle\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_color\":{\"value\":\"black\"},\"inner_radius\":{\"units\":\"data\",\"value\":80},\"outer_radius\":{\"units\":\"data\",\"value\":300},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"4d8c9fb9-e289-4e19-aaeb-f01068ab052e\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"radius\"],\"data\":{\"radius\":{\"__ndarray__\":\"AAAAAAAgckDHcwaqNPVtQDjj0CUzIWlABsmM1zIPZUCg0sRXLXlhQBRFOMxxdlxAAAAAAACAVkA=\",\"dtype\":\"float64\",\"shape\":[7]}}},\"id\":\"1ad28558-e945-4441-8b28-503606f632c7\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"outer_radius\",\"start_angle\",\"end_angle\"],\"data\":{\"end_angle\":{\"__ndarray__\":\"FyEz4zyk8z8EPFU1uHTrP7hriEjtQd8/ln2Zmahpvj/urLv7GA3Qv6Lc7g5O2uO/yuL/nw+u7797dIiY6MD1v4/3EGHJqvu/Ub3MFFXKAMDc/hB5Rb8DwGZAVd01tAbA8IGZQSapCcB6w92lFp4MwAcFIgoHkw/ARyMzt/tDEcA=\",\"dtype\":\"float64\",\"shape\":[16]},\"outer_radius\":{\"__ndarray__\":\"pmlXNAGDYkDWwF0C/m1lQDjj0CUzIWlAZ+OHhpjCZECbzPtu2O9jQJvM+27Y72NAHRgJcjWcZkAdGAlyNZxmQAbJjNcyD2VAx3MGqjT1bUAGyYzXMg9lQIaiNChEiGtAOOPQJTMhaUDoDDhWBvtgQKDSxFcteWFASjEX/kFVYUA=\",\"dtype\":\"float64\",\"shape\":[16]},\"start_angle\":{\"__ndarray__\":\"8DJENPjL8j+1X3fXLsTpPxqzzIza4Ns/Hpuqql3lsD+MZXe3K27Tv/G4zGzXiuW/jN/ufkyv8L+iYndHLZn2v7bl/w8Og/y/ZTREbHc2AcDwdYjQZysEwHq3zDRYIAfABPkQmUgVCsCOOlX9OAoNwBt8mWEp/w/A0d7u4gx6EcA=\",\"dtype\":\"float64\",\"shape\":[16]}}},\"id\":\"693a2c3f-ad2e-42fd-acba-91b89d61692e\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"callback\":null,\"end\":420,\"start\":-420},\"id\":\"fa63218f-9e7a-44fd-a94a-4807ef8e90de\",\"type\":\"Range1d\"},{\"attributes\":{\"plot\":{\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"24f2e18d-858c-45bf-b645-1921393fc0cf\",\"type\":\"SaveTool\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_color\":{\"value\":\"#0d3362\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_color\":{\"value\":\"#0d3362\"},\"outer_radius\":{\"field\":\"outer_radius\",\"units\":\"data\"},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"925814bc-545e-41fd-ae63-8b80c7fc5e94\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"y\",\"text\"],\"data\":{\"text\":[\"0.001\",\"0.01\",\"0.1\",\"1.0\",\"10.0\",\"100.0\"],\"y\":{\"__ndarray__\":\"AAAAAAAgckDHcwaqNPVtQDjj0CUzIWlABsmM1zIPZUCg0sRXLXlhQBRFOMxxdlxA\",\"dtype\":\"float64\",\"shape\":[6]}}},\"id\":\"f2d11260-1728-436d-a4c2-aad9a046e5d1\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text_alpha\":{\"value\":0.1},\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"9pt\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"84cd96cc-31b9-4485-be1a-a7eaadc02f6d\",\"type\":\"Text\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_scroll\":\"auto\",\"active_tap\":\"auto\",\"tools\":[{\"id\":\"31352733-5886-4e8c-9b24-6230066ffe9f\",\"type\":\"PanTool\"},{\"id\":\"011b1db8-57d1-4acc-9bac-09fd1f9de186\",\"type\":\"WheelZoomTool\"},{\"id\":\"787da493-955d-4ac8-bf58-34629a09d474\",\"type\":\"BoxZoomTool\"},{\"id\":\"24f2e18d-858c-45bf-b645-1921393fc0cf\",\"type\":\"SaveTool\"},{\"id\":\"6dc39141-550d-4d2d-8ed7-e3bc0f19ed0d\",\"type\":\"ResetTool\"},{\"id\":\"e1ce3445-1e3d-415f-941f-5178ef341ef4\",\"type\":\"HelpTool\"}]},\"id\":\"3955a4b9-44e2-4535-b6ec-74149dcc849d\",\"type\":\"Toolbar\"},{\"attributes\":{\"data_source\":{\"id\":\"3988c8d6-808c-4297-b43d-39efc801db8b\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"925814bc-545e-41fd-ae63-8b80c7fc5e94\",\"type\":\"AnnularWedge\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"510d9790-5040-4de3-afb4-8ce7f3239220\",\"type\":\"AnnularWedge\"},\"selection_glyph\":null},\"id\":\"c427ee57-4abe-46ed-a61a-a13bd516e60b\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_color\":{\"value\":\"black\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"outer_radius\":{\"field\":\"outer_radius\",\"units\":\"data\"},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"032ea1e0-dcf0-4896-bc6d-84b11ccf5285\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"data_source\":{\"id\":\"f2d11260-1728-436d-a4c2-aad9a046e5d1\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"c15eee13-1fa0-42c7-b216-066f3963be0a\",\"type\":\"Text\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"fb1b8a52-99e5-4653-b4d7-d1ac280eebea\",\"type\":\"Text\"},\"selection_glyph\":null},\"id\":\"a3fe6ab3-ba84-4b78-ac62-8e3d9039daaf\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"plot\":{\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"31352733-5886-4e8c-9b24-6230066ffe9f\",\"type\":\"PanTool\"},{\"attributes\":{\"plot\":{\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"e1ce3445-1e3d-415f-941f-5178ef341ef4\",\"type\":\"HelpTool\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"x\",\"y\",\"fill_color\",\"line_color\"],\"data\":{\"fill_color\":[\"#0d3362\",\"#c64737\",\"black\"],\"line_color\":[\"#0d3362\",\"#c64737\",\"black\"],\"x\":[-40,-40,-40],\"y\":[18,0,-18]}},\"id\":\"7118fe63-0f4a-4115-b4e1-9575c6698f51\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"y\",\"x\",\"text\",\"angle\"],\"data\":{\"angle\":{\"__ndarray__\":\"BKq7ixo48z/dTWaGc5zqP2iPqupjkd0/WgwiIoOntz8+iZlZor3Rv8nK3b2SsuS/eGh3JypD8L+O6//vCi32v47r/+8KLfY/emh3JypD8D/Iyt29krLkP0CJmVmivdE/QAwiIoOnt79gj6rqY5Hdv+BNZoZznOq/BKq7ixo4878=\",\"dtype\":\"float64\",\"shape\":[16]},\"text\":[\"Mycobacterium tuberculosis\",\"Salmonella schottmuelleri\",\"Proteus vulgaris\",\"Klebsiella pneumoniae\",\"Brucella abortus\",\"Pseudomonas aeruginosa\",\"Escherichia coli\",\"Salmonella (Eberthella) typhosa\",\"Aerobacter aerogenes\",\"Brucella antracis\",\"Streptococcus fecalis\",\"Staphylococcus aureus\",\"Staphylococcus albus\",\"Streptococcus hemolyticus\",\"Streptococcus viridans\",\"Diplococcus pneumoniae\"],\"x\":{\"__ndarray__\":\"cGn7M6UwWkA0VkZE5WtoQKq2lcOOOXBAjuBL4jQMckDOGdT43m5xQMF6BpGZ7WxA7SBXXEoVY0AXTcs3yKRKQBJNyzfIpErA6CBXXEoVY8DBegaRme1swM4Z1PjebnHAj+BL4jQMcsCrtpXDjjlwwDJWRkTla2jAcWn7M6UwWsA=\",\"dtype\":\"float64\",\"shape\":[16]},\"y\":{\"__ndarray__\":\"aywf0KvmcEAmrFe0AMpqQKfycbJzKGBAv6EJxQDCOkC6LG9iL9dTwNZbjg1z2GXAdpVS2APSbsAYUkjE/tBxwBhSSMT+0HHAepVS2APSbsDWW44Nc9hlwL8sb2Iv11PAmaEJxQDCOkCi8nGycyhgQCasV7QAympAaywf0KvmcEA=\",\"dtype\":\"float64\",\"shape\":[16]}}},\"id\":\"1c5e9bae-f5da-4bbf-bc74-6f7f3a20d97a\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"693a2c3f-ad2e-42fd-acba-91b89d61692e\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"c221221c-2b0e-44a4-a015-6cac8bc6bf19\",\"type\":\"AnnularWedge\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"52220ca1-a78f-4985-a01e-a600a78bba7d\",\"type\":\"AnnularWedge\"},\"selection_glyph\":null},\"id\":\"c0635dc8-ea33-4c13-b29e-7815d4b757f7\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"plot\":{\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"011b1db8-57d1-4acc-9bac-09fd1f9de186\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data_source\":{\"id\":\"5b8f6813-5543-493d-bfe5-adc77bcbe901\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"171da75b-2052-41d7-a656-bbc8155e6763\",\"type\":\"Circle\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"e75b7230-33fd-4e59-9157-de8f32cdbcad\",\"type\":\"Circle\"},\"selection_glyph\":null},\"id\":\"5d2206f4-f0d3-4575-a8ab-433ee5a098a6\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_color\":{\"field\":\"fill_color\"},\"line_color\":{\"field\":\"line_color\"},\"radius\":{\"units\":\"data\",\"value\":5},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"171da75b-2052-41d7-a656-bbc8155e6763\",\"type\":\"Circle\"},{\"attributes\":{\"text_align\":\"center\",\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"8pt\"},\"x\":{\"value\":0},\"y\":{\"field\":\"y\"}},\"id\":\"c15eee13-1fa0-42c7-b216-066f3963be0a\",\"type\":\"Text\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"start_angle\",\"end_angle\",\"fill_color\",\"line_color\"],\"data\":{\"end_angle\":{\"__ndarray__\":\"juv/7wot9j95aHcnKkPwP8nK3b2SsuQ/QImZWaK90T9QDCIig6e3v2iPqupjkd2/3E1mhnOc6r8EqruLGjjzvxgtRFT7Ifm/LLDMHNwL/7+hmapy3noCwCvb7tbObwXAtRwzO79kCMA/Xnefr1kLwMufuwOgTg7AqvD/M8ihEMA=\",\"dtype\":\"float64\",\"shape\":[16]},\"fill_color\":[\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\"],\"line_color\":[\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#e69584\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\",\"#aeaeb8\"],\"start_angle\":{\"__ndarray__\":\"eWh3JypD8D/Iyt29krLkPz+JmVmivdE/TAwiIoOnt79nj6rqY5Hdv95NZoZznOq/A6q7ixo4878ZLURU+yH5vy2wzBzcC/+/oJmqct56AsAr2+7Wzm8FwLUcMzu/ZAjAP153n69ZC8DJn7sDoE4OwKvw/zPIoRDAbxEiZkAcEsA=\",\"dtype\":\"float64\",\"shape\":[16]}}},\"id\":\"c5297bac-23fd-47e8-8b40-ce69b3c659bc\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":{\"value\":0.5},\"fill_color\":{\"value\":\"lightgrey\"},\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":{\"value\":1.0},\"line_color\":{\"value\":\"black\"},\"line_dash\":[4,4],\"line_width\":{\"value\":2},\"plot\":null,\"render_mode\":\"css\",\"right_units\":\"screen\",\"top_units\":\"screen\"},\"id\":\"8cff9a13-f38a-40be-8f57-f4d4324aea5e\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"inner_radius\":{\"units\":\"data\",\"value\":80},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"outer_radius\":{\"units\":\"data\",\"value\":300},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"dec61edc-dc86-4cd5-abdf-50e256a72a0e\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"end_angle\":{\"field\":\"end_angle\",\"units\":\"rad\"},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"inner_radius\":{\"units\":\"data\",\"value\":90},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"outer_radius\":{\"field\":\"outer_radius\",\"units\":\"data\"},\"start_angle\":{\"field\":\"start_angle\",\"units\":\"rad\"},\"x\":{\"value\":0},\"y\":{\"value\":0}},\"id\":\"510d9790-5040-4de3-afb4-8ce7f3239220\",\"type\":\"AnnularWedge\"},{\"attributes\":{\"text_align\":\"center\",\"text_alpha\":{\"value\":0.1},\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"8pt\"},\"x\":{\"value\":0},\"y\":{\"field\":\"y\"}},\"id\":\"fb1b8a52-99e5-4653-b4d7-d1ac280eebea\",\"type\":\"Text\"},{\"attributes\":{\"data_source\":{\"id\":\"71c3368b-9475-4070-8ffb-7e7bdf93f3bd\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"0bacc259-7d63-457b-b7fb-aac7f23b6c3a\",\"type\":\"Text\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"84cd96cc-31b9-4485-be1a-a7eaadc02f6d\",\"type\":\"Text\"},\"selection_glyph\":null},\"id\":\"c9cc1e03-2fab-4f37-afa5-b6888dc76802\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text_baseline\":\"middle\",\"text_color\":{\"value\":\"black\"},\"text_font_size\":{\"value\":\"9pt\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"0bacc259-7d63-457b-b7fb-aac7f23b6c3a\",\"type\":\"Text\"},{\"attributes\":{\"data_source\":{\"id\":\"c5297bac-23fd-47e8-8b40-ce69b3c659bc\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"ce86057b-eabb-4df1-9430-4fd15b2d3ce1\",\"type\":\"AnnularWedge\"},\"hover_glyph\":null,\"nonselection_glyph\":{\"id\":\"5e614112-c86a-43c2-9076-ba0b5e214dc5\",\"type\":\"AnnularWedge\"},\"selection_glyph\":null},\"id\":\"9c5cfa5a-c736-44ce-9cf3-9b536839a698\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"8cff9a13-f38a-40be-8f57-f4d4324aea5e\",\"type\":\"BoxAnnotation\"},\"plot\":{\"id\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"787da493-955d-4ac8-bf58-34629a09d474\",\"type\":\"BoxZoomTool\"}],\"root_ids\":[\"fb2a9851-e79e-402a-a161-aab9904dd74d\"]},\"title\":\"Bokeh Application\",\"version\":\"0.12.4\"}};\n            var render_items = [{\"docid\":\"1477b689-6c5b-40cf-90cb-e01828a44004\",\"elementid\":\"38fc86ba-51d6-41d0-8ad3-0141205022f1\",\"modelid\":\"fb2a9851-e79e-402a-a161-aab9904dd74d\"}];\n            \n            Bokeh.embed.embed_items(docs_json, render_items);\n          };\n          if (document.readyState != \"loading\") fn();\n          else document.addEventListener(\"DOMContentLoaded\", fn);\n        })();\n      },\n      function(Bokeh) {\n      }\n    ];\n  \n    function run_inline_js() {\n      \n      if ((window.Bokeh !== undefined) || (force === true)) {\n        for (var i = 0; i < inline_js.length; i++) {\n          inline_js[i](window.Bokeh);\n        }if (force === true) {\n          display_loaded();\n        }} else if (Date.now() < window._bokeh_timeout) {\n        setTimeout(run_inline_js, 100);\n      } else if (!window._bokeh_failed_load) {\n        console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n        window._bokeh_failed_load = true;\n      } else if (force !== true) {\n        var cell = $(document.getElementById(\"38fc86ba-51d6-41d0-8ad3-0141205022f1\")).parents('.cell').data().cell;\n        cell.output_area.append_execute_result(NB_LOAD_WARNING)\n      }\n  \n    }\n  \n    if (window._bokeh_is_loading === 0) {\n      console.log(\"Bokeh: BokehJS loaded, going straight to plotting\");\n      run_inline_js();\n    } else {\n      load_libs(js_urls, function() {\n        console.log(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }(this));\n</script>","div_id":"327f91a0-22fc-45a1-9473-1b34854d83dc"},"task":"publish"},"noteId":"2CA2PRGXE"},{"name":"__jupyter_comm_status__","object":"Shim initialized (do not delete this paragraph)","noteId":"2CA2PRGXE"}],"2CBEDQHXY:shared_process":[],"2C97UNR7H:shared_process":[],"2C9CWX9EW:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}