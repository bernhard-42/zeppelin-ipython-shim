{"paragraphs":[{"text":"%pyspark\nimport sys\nprint(\"Python: \", sys.version.replace(\"\\n\", \" - \"))\nprint(\"Spark:  \", sc.version)\n","user":"anonymous","dateUpdated":"2017-03-03T09:42:33+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174924_-635225939","id":"20170226-205154_1841885464","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:42:33+0100","dateFinished":"2017-03-03T09:42:33+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:58937"},{"text":"%md\n## 1 Initialize ZeppelinCommLayer","user":"anonymous","dateUpdated":"2017-03-03T09:47:57+0100","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174936_-627530961","id":"20170222-114829_709151521","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:47:57+0100","dateFinished":"2017-03-03T09:47:57+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58938","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1 Initialize ZeppelinCommLayer</h2>\n</div>"}]}},{"title":"Import the Zeppelin Comm Layer, intialize it ...","text":"%pyspark\n\nfrom zeppelin_comm_layer import ZeppelinCommLayer\n\nzcl = ZeppelinCommLayer(z.z, logLevel=\"DEBUG\")\n","user":"anonymous","dateUpdated":"2017-03-03T09:42:48+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174937_-627915710","id":"20170222-110000_685570517","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:42:48+0100","dateFinished":"2017-03-03T09:42:48+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58939"},{"title":"... and start it in the next (!) Zeppelin paragraph","text":"%pyspark\n\nzcl.start()\n","user":"anonymous","dateUpdated":"2017-03-03T09:42:51+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174940_-629069957","id":"20170226-221102_1708128437","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:42:51+0100","dateFinished":"2017-03-03T09:42:51+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58940"},{"text":"%md\n## 2 Use Bokeh","user":"anonymous","dateUpdated":"2017-03-03T09:49:59+0100","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174941_-629454706","id":"20170222-115247_163469636","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:49:56+0100","dateFinished":"2017-03-03T09:49:56+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58941","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2 Use Bokeh</h2>\n</div>"}]}},{"text":"%pyspark\n\nzcl.enableBokeh()\n","user":"anonymous","dateUpdated":"2017-03-03T09:50:35+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488481608213_-404421197","id":"20170302-200648_282889707","dateCreated":"2017-03-02T20:06:48+0100","dateStarted":"2017-03-03T09:50:24+0100","dateFinished":"2017-03-03T09:50:24+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58942","title":"Adapt Bokeh global state management to Zeppelin","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfrom bokeh.io import push_notebook, show, output_notebook\nfrom bokeh.layouts import row\nfrom bokeh.resources import Resources\nfrom bokeh.plotting import figure\n\noutput_notebook()\n","user":"anonymous","dateUpdated":"2017-03-03T09:49:20+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174947_-642536168","id":"20170218-224440_1753132708","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:45:47+0100","dateFinished":"2017-03-03T09:45:47+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58943","title":"Load Bokeh libraries and redirect output to Zeppelin Notebook"},{"title":" Render a first plot","text":"%pyspark\nopts = dict(plot_width=250, plot_height=250, min_border=0)\np1 = figure(**opts)\nr1 = p1.circle([1,2,3], [4,5,6], size=20)\n\np2 = figure(**opts)\nr2 = p2.circle([1,2,3], [4,5,6], size=20)\n\nhandle1 = show(row(p1, p2), notebook_handle=True)\n","user":"anonymous","dateUpdated":"2017-03-03T09:45:50+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174949_-644844662","id":"20170218-225316_1761670326","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:45:50+0100","dateFinished":"2017-03-03T09:45:50+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58945"},{"title":"And modify it via push_notebook","text":"%pyspark\n\nr1.glyph.fill_color = \"white\"\nr2.glyph.fill_color = \"brown\"\n\npush_notebook(handle=handle1)\n\n","user":"anonymous","dateUpdated":"2017-03-03T09:46:11+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174950_-643690415","id":"20170219-102152_1345959524","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-03T09:46:11+0100","dateFinished":"2017-03-03T09:46:11+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58946"},{"text":"%pyspark\nimport numpy as np\n\ndef update(f, handle, w=1, A=1, phi=0):\n    if   f == \"sin\": func = np.sin\n    elif f == \"cos\": func = np.cos\n    elif f == \"tan\": func = np.tan\n    r.data_source.data['y'] = A * func(w * x + phi)\n    push_notebook(handle=handle)\n    \nx = np.linspace(0, 2*np.pi, 2000)\ny = np.sin(x)\n\nplot2 = figure(title=\"simple line example\", plot_height=300, plot_width=600, y_range=(-5,5))\nr = plot2.line(x, y, color=\"#2222aa\", line_width=3)\n\nhandle2 = show(plot2, notebook_handle=True)\n","user":"anonymous","dateUpdated":"2017-03-03T09:51:09+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488472962551_212872414","id":"20170302-174242_1092437584","dateCreated":"2017-03-02T17:42:42+0100","dateStarted":"2017-03-03T09:51:09+0100","dateFinished":"2017-03-03T09:51:09+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58947","title":"Another dynamic plot","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nupdate(\"tan\", handle2)","user":"anonymous","dateUpdated":"2017-03-03T09:46:28+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488473042950_1256016983","id":"20170302-174402_1081888283","dateCreated":"2017-03-02T17:44:02+0100","dateStarted":"2017-03-03T09:46:28+0100","dateFinished":"2017-03-03T09:46:28+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58948"},{"title":"A multiple plot layout","text":"%pyspark\nfrom bokeh.io import output_file, show\nfrom bokeh.layouts import column\nfrom bokeh.plotting import figure\n\nx = list(range(11))\ny0 = x\ny1 = [10 - i for i in x]\ny2 = [abs(i - 5) for i in x]\n\n# create a new plot\ns1 = figure(width=250, plot_height=250, title=None)\ns1.circle(x, y0, size=10, color=\"navy\", alpha=0.5)\n\n# create another one\ns2 = figure(width=250, height=250, title=None)\ns2.triangle(x, y1, size=10, color=\"firebrick\", alpha=0.5)\n\n# create and another\ns3 = figure(width=250, height=250, title=None)\ns3.square(x, y2, size=10, color=\"olive\", alpha=0.5)\n\n# put the results in a column and show\nshow(column(s1, s2, s3))\n","user":"anonymous","dateUpdated":"2017-03-02T18:01:18+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174951_-644075164","id":"20170220-211727_557875734","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-02T17:42:28+0100","dateFinished":"2017-03-02T17:42:28+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58949"},{"title":"Try to move the canvas in one plot!","text":"%pyspark\nfrom bokeh.io import output_file, show\nfrom bokeh.layouts import gridplot\nfrom bokeh.plotting import figure\n\nx = list(range(11))\ny0 = x\ny1 = [10-xx for xx in x]\ny2 = [abs(xx-5) for xx in x]\n\n# create a new plot\ns1 = figure(width=250, plot_height=250, title=None)\ns1.circle(x, y0, size=10, color=\"navy\", alpha=0.5)\n\n# create a new plot and share both ranges\ns2 = figure(width=250, height=250, x_range=s1.x_range, y_range=s1.y_range, title=None)\ns2.triangle(x, y1, size=10, color=\"firebrick\", alpha=0.5)\n\n# create a new plot and share only one range\ns3 = figure(width=250, height=250, x_range=s1.x_range, title=None)\ns3.square(x, y2, size=10, color=\"olive\", alpha=0.5)\n\np = gridplot([[s1, s2, s3]], toolbar_location=None)\n\n# show the results\nshow(p)","user":"anonymous","dateUpdated":"2017-03-01T18:23:00+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174952_-645998908","id":"20170221-184932_909609162","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-01T18:23:00+0100","dateFinished":"2017-03-01T18:23:00+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58950"},{"title":"Try to select points in one plot!","text":"%pyspark\nfrom bokeh.io import output_file, show\nfrom bokeh.layouts import gridplot\nfrom bokeh.models import ColumnDataSource\nfrom bokeh.plotting import figure\n\nx = list(range(-20, 21))\ny0 = [abs(xx) for xx in x]\ny1 = [xx**2 for xx in x]\n\n# create a column data source for the plots to share\nsource = ColumnDataSource(data=dict(x=x, y0=y0, y1=y1))\n\nTOOLS = \"box_select,lasso_select,help\"\n\n# create a new plot and add a renderer\nleft = figure(tools=TOOLS, width=300, height=300, title=None)\nleft.circle('x', 'y0', source=source)\n\n# create another new plot and add a renderer\nright = figure(tools=TOOLS, width=300, height=300, title=None)\nright.circle('x', 'y1', source=source)\n\np = gridplot([[left, right]])\n\nshow(p)","user":"anonymous","dateUpdated":"2017-03-01T18:23:03+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174953_-646383657","id":"20170221-185414_472033204","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-01T18:23:03+0100","dateFinished":"2017-03-01T18:23:03+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58951"},{"title":"Try to move the slider!","text":"%pyspark\nfrom bokeh.layouts import column\nfrom bokeh.models import CustomJS, ColumnDataSource, Slider\nfrom bokeh.plotting import Figure, output_file, show\n\n\nx = [x*0.005 for x in range(0, 200)]\ny = x\n\nsource = ColumnDataSource(data=dict(x=x, y=y))\n\nplot = Figure(plot_width=400, plot_height=400)\nplot.line('x', 'y', source=source, line_width=3, line_alpha=0.6)\n\ncallback = CustomJS(args=dict(source=source), code=\"\"\"\n    var data = source.data;\n    var f = cb_obj.value\n    x = data['x']\n    y = data['y']\n    for (i = 0; i < x.length; i++) {\n        y[i] = Math.pow(x[i], f)\n    }\n    source.trigger('change');\n\"\"\")\n\nslider = Slider(start=0.1, end=4, value=1, step=.1, title=\"power\")\nslider.js_on_change('value', callback)\n\nlayout = column(slider, plot)\n\nshow(layout)","user":"anonymous","dateUpdated":"2017-03-01T18:23:06+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174954_-645229411","id":"20170221-190656_2134476265","dateCreated":"2017-02-28T11:36:14+0100","dateStarted":"2017-03-01T18:23:06+0100","dateFinished":"2017-03-01T18:23:06+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58952"},{"text":"%pyspark\n","dateUpdated":"2017-02-28T11:36:14+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488278174955_-645614160","id":"20170225-124213_402551322","dateCreated":"2017-02-28T11:36:14+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58953"}],"name":"ZeppelinCommLayer Overview","id":"2CAQWZYJE","angularObjects":{"2C8KMF5VC:shared_process":[],"2C81K8Y1C:shared_process":[],"2C9DGV36Z:shared_process":[],"2C981DKMT:shared_process":[{"name":"____zeppelin_comm_2CAQWZYJE_status__","object":"ZeppelinCommLayer initialized (do not delete this paragraph)","noteId":"2CAQWZYJE"},{"name":"____zeppelin_comm_2CAQWZYJE_msg__","object":{"msg":{"data":"{\"references\": [], \"events\": [{\"model\": {\"id\": \"1d858473-191c-4bec-a9bb-92e3a13c8ac6\", \"type\": \"ColumnDataSource\"}, \"attr\": \"data\", \"kind\": \"ModelChanged\", \"new\": {\"y\": {\"__ndarray__\": \"\", \"shape\": [2000], \"dtype\": \"float64\"}, \"x\": {\"__ndarray__\": \"\", \"shape\": [2000], \"dtype\": \"float64\"}}}]}","target_name":"76a5421d-9cea-4785-95ac-88d4124c1a9f","comm_id":"0ff6bd00-4614-412c-bb20-248d31d0f436"},"task":"comm_msg"},"noteId":"2CAQWZYJE"}],"2C96XVBTX:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}